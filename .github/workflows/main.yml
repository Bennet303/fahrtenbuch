name: Build & Release

# This workflow is triggered on pushes to the repository.

on:
  push:
    tags:
      - "v*.*.*"
    
# on: push    # Default will running for every branch.
    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
        
    - name: Decode android/keystore.jks
      run: echo "${{ secrets.KEYSTORE_JKS_PROD }}" | base64 --decode > android/keystore.jks

    - name: Decode android/key.properties
      run: echo "${{ secrets.KEY_PROPERTIES_PROD }}" | base64 --decode > android/key.properties
        
    - name: Get tag name
      uses: olegtarasov/get-tag@v2 # that generate $GIT_TAG_NAME env
      id: tagName
      with:
        tagRegex: 'v([0-9]+.[0-9]+.[0-9]+\+[0-9]+)' # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
        tagRegexGroup: 1 # Optional. Default is 1.

    - name: Replace YAML version with tag version
      run: |
        sed -i 's/99.99.99+99/'$GIT_TAG_NAME'/g' pubspec.yaml|
        echo "Tag used version:"$GIT_TAG_NAME
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    - run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .
    
    # Run widget tests for our flutter project.
    - run: flutter test
    
    # Build apk.
    - name: Build 
      run: |
        mkdir $HOME/private
        gpg --quiet --batch --yes --decrypt --passphrase="$FIREBASE_SECRET" \
        --output $HOME/private/services.tar services.tar.gpg
        tar xvf $HOME/private/services.tar
        flutter build apk --split-per-abi
      env:
        FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET }}
      
    - name: Push APK to Releases
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/release/*.apk"
        token: ${{ secrets.TOKEN }}
